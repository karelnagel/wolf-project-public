---
import Layout from "../../../components/Layout.astro";
import { useTranslations } from "@wolf-project/i18n";
import { db, eq, like, Tasks, Users } from "astro:db";
import { AddComment } from "../../../components/Comment";
import { Comments } from "astro:db";

const t = useTranslations("en");

const { taskId } = Astro.params;
const id = taskId?.split("/")[0];
if (!id) throw new Error("id is required");
console.log("ID:", id);

const task = await db.select().from(Tasks).where(like(Tasks.taskId, id));

const comments = await db
  .select({
    name: Users.name,
    job: Users.job,
    body: Comments.body,
  })
  .from(Comments)
  .where(like(Comments.taskRef, id))
  .innerJoin(Users, eq(Comments.commenterId, Users.userId));



const userId = "1d8c087a-03d8-4ba7-868c-c07606c5e197"; /*Placeholder for testing*/
---

<Layout title={undefined} description={undefined}>
  <a class="font-medium text-blue-600 underline dark:text-blue-500 hover:no-underline" href="/"
    >{t.project.title}</a
  >
  <p>Task subpage</p>
  {
    task.map(({ taskId, title, description, deadline, status }) => (
      <div>
        <p>Task ID: {taskId}</p>
        <p>Task title: {title}</p>
        <p>Task descriptio: {description}</p>
        <p>Deadline: {deadline}</p>
        <p>Status: {status}</p>
      </div>
    ))
  }
  <div>
    {
      comments.map(({ body, name, job }) => (
        <div>
          <p>
            {name}
            {job !== undefined ? ` - ${job}` : null}
          </p>
          <p>{body}</p>
        </div>
      ))
    }
  </div>

  <AddComment taskRef={id} commenterId={userId} client:load />
</Layout>
